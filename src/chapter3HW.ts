let a3 = 1042 //number
let b3 = 'apples and oranges' //string
const c3 = 'pineapples' //pineapples
let d3 = [true, true, false] //boolean[]
let e3 = {type: 'ficus'} // {type: string}
let f = [1, false] //(number | boolean)[]
const g = [3] //number[]
let h = null //any

let i: 3 = 3;
i = 4; //Переменная i определена типом 3, то есть ей можно присвоить только значение 3. Присвоение значения 4 вызывает ошибку, так как нарушает указанный тип.

let j = [1, 2, 3]
j.push(4)
j.push('5') //TS определил массив j как number[], тк. он состоит из чисел. Попытка добавить строку '5' вызывает ошибку, так как массив принимает только элементы типа number

let k: never = 4 //Тип never указывает, что переменная не может иметь никакого значения. Обычно используется для переменных, которые никогда не достигают присвоения (например, бросают исключения). Попытка присвоить значение 4 нарушает тип never.

let l: unknown = 4;
let m = l * 2; //Тип unknown ограничивает доступ к переменной, пока не будет проверен её тип. Перед выполнением действия нужно преобразовать l к number, чтобы избежать ошибки.